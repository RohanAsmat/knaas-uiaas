[{"id":"e510fcb9.9a14f8","type":"tab","label":"4_UIaaS_PFLyon_Interaction"},{"id":"ab8f0cf8.977df8","type":"inject","z":"e510fcb9.9a14f8","name":"Execute UIaaS Request","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":332,"y":285,"wires":[["6e46e3eb.aa4c94"]]},{"id":"6e46e3eb.aa4c94","type":"omiNodeV9","z":"e510fcb9.9a14f8","name":"Read O-MI Node Lyon Parking Facillities","path_InfoItem":"http://veivi.parkkis.com:8080/Objects/ParkingService/ParkingFacilities","token":"","operations":"Read","ttl":"","interval":"","callback":"","newest":"","oldest":"","begin":"","end":"","value":"","reqID":"","metadata":true,"readTypes":"read1time","x":491,"y":394,"wires":[["501fde45.1a7fc8"]]},{"id":"a2a69ee8.976fe","type":"debug","z":"e510fcb9.9a14f8","name":"OutputOMINodeLyon","active":true,"console":"false","complete":"payload","x":799,"y":444,"wires":[]},{"id":"501fde45.1a7fc8","type":"xml","z":"e510fcb9.9a14f8","name":"Lyon O-DF Structure to JSON","attr":"","chr":"","x":532,"y":525,"wires":[["5a16ede9.507ad4"]]},{"id":"5a16ede9.507ad4","type":"python3-function","z":"e510fcb9.9a14f8","name":"Extract Response O-MI Node","func":"#taking response value \n#Note in response first is longitude --> 0 and latitude -->1\nresponse = msg[\"payload\"][\"omiEnvelope\"][\"response\"][0][\"result\"][0][\"return\"][0][\"$\"][\"returnCode\"];\n\nlstForGeo = []\nlstForAvailability = []\nlstForOpeningHours = []\npointOfInterest = []\npointOfPark = []\npSpaces = []\nparsedGeoAndCorrespondingAvailability = []\n\nif response == \"200\":\n    node.log(\"Extract Response O-MI Node: Success in reading O-MI Node Contents\")\n    \n    #getting the array of Objects with the Parking Facilities Data from Lyon\n    lyonParkikisInfoItem = msg[\"payload\"][\"omiEnvelope\"][\"response\"][0][\"result\"][0][\"msg\"][0][\"Objects\"][0][\"Object\"][0]\n    lyonParkikisObjectID = lyonParkikisInfoItem[\"id\"][0]\n    lyonParkikisArrayofItems = lyonParkikisInfoItem[\"Object\"][0][\"Object\"]\n    \n    #Storing the result of three different types of Objects in three different lists, hence the indexes of the list items \n    #correspond to a unanimous rootID\n    for object in lyonParkikisArrayofItems:\n        parsedFacility = object[\"Object\"]\n        for data in parsedFacility:\n            if data[\"id\"][0] == \"geo\":\n             lstForGeo.append(data['InfoItem'])\n            elif data[\"id\"][0] == \"ParkingSpaces\":\n             lstForAvailability.append(data[\"Object\"]) \n            else:\n             lstForOpeningHours = data\n             \n   #points for coordinates geo location\n    for geo in lstForGeo:\n        longitude = 0.0\n        latitude = 0.0\n        for coords in geo:\n            if coords[\"$\"][\"name\"] == \"longitude\":\n             longitude = coords[\"value\"][0][\"_\"]\n            else:\n             latitude = coords[\"value\"][0][\"_\"]\n            \n        pointOfInterest.append([ float(longitude), float(latitude) ]) \n    \n    #relative points of Parking Availabilities\n    number = 0\n    for ParkingSpaces in lstForAvailability:\n        parkID = \"000\"\n        parkAvailability = \"false\"\n        pointOfPark.append([])\n        for parkPlatz in ParkingSpaces:\n            parkID = parkPlatz[\"id\"][0]\n            parkAvailability = parkPlatz[\"InfoItem\"][0][\"value\"][0][\"_\"]\n            pointOfPark[number].append([ parkID , parkAvailability ])\n        number = number + 1\n    \n    #parsedGeoAndCorrespondingAvailability\n    iterator = 0\n    for items in pointOfInterest:\n        parsedGeoAndCorrespondingAvailability.append([{'geo': items },{'ParkingSpaces': pointOfPark[iterator]}])\n        iterator = iterator + 1\n\nelse:\n    node.error(\"Extract Response O-MI Node: Failure in reading O-MI Node Contents\")\n\nmsg[\"payload\"] = parsedGeoAndCorrespondingAvailability;\n\nreturn msg","outputs":1,"x":753,"y":611,"wires":[["a2a69ee8.976fe"]]}]
